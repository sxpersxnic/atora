name: Build and Test

on:
  push:
    branches: ["main", "releases/0.0.0"]
  pull_request:
    branches: ["main", "releases/0.0.0"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build Library
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch full history for changesets
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run type check
        run: pnpm type-check

      - name: Run linting
        run: pnpm lint

      - name: Run tests
        run: pnpm test:run

      - name: Build library
        run: pnpm build:production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts-node-${{ matrix.node-version }}
          path: |
            dist/
            !dist/**/*.map
          retention-days: 7

      - name: Upload coverage reports
        if: matrix.node-version == 20
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  build-storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Storybook
        run: pnpm build-storybook

      - name: Upload Storybook artifacts
        uses: actions/upload-artifact@v3
        with:
          name: storybook-static
          path: storybook-static/
          retention-days: 7

  size-check:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build with analysis
        run: pnpm build:analyze

      - name: Check bundle size
        run: |
          echo "## Bundle Size Report" >> $GITHUB_STEP_SUMMARY
          echo "| File | Size |" >> $GITHUB_STEP_SUMMARY
          echo "|------|------|" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "dist/index.js" ]; then
            SIZE=$(stat -f%z dist/index.js 2>/dev/null || stat -c%s dist/index.js)
            SIZE_KB=$((SIZE / 1024))
            echo "| index.js | ${SIZE_KB} KB |" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f "dist/index.mjs" ]; then
            SIZE=$(stat -f%z dist/index.mjs 2>/dev/null || stat -c%s dist/index.mjs)
            SIZE_KB=$((SIZE / 1024))
            echo "| index.mjs | ${SIZE_KB} KB |" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f "dist/index.d.ts" ]; then
            SIZE=$(stat -f%z dist/index.d.ts 2>/dev/null || stat -c%s dist/index.d.ts)
            SIZE_KB=$((SIZE / 1024))
            echo "| index.d.ts | ${SIZE_KB} KB |" >> $GITHUB_STEP_SUMMARY
          fi

  publish-check:
    name: Publish Dry Run
    runs-on: ubuntu-latest
    needs: [build, build-storybook]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build for production
        run: pnpm build:production

      - name: Dry run publish
        run: pnpm publish --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  notify:
    name: Notify Build Status
    runs-on: ubuntu-latest
    needs: [build, build-storybook, size-check]
    if: always()
    
    steps:
      - name: Build Success
        if: needs.build.result == 'success' && needs.build-storybook.result == 'success'
        run: |
          echo "✅ All builds completed successfully!" >> $GITHUB_STEP_SUMMARY
          echo "- Library build: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- Storybook build: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- Bundle size check: ✅" >> $GITHUB_STEP_SUMMARY

      - name: Build Failure
        if: needs.build.result == 'failure' || needs.build-storybook.result == 'failure'
        run: |
          echo "❌ Build failed!" >> $GITHUB_STEP_SUMMARY
          echo "- Library build: ${{ needs.build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Storybook build: ${{ needs.build-storybook.result }}" >> $GITHUB_STEP_SUMMARY
          exit 1